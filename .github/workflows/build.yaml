name: build

on:
  workflow_dispatch:
    inputs:
      build-version:
        description: "Build version, e.g. 1.0.0, for app metadata."
        required: true
        type: string
  workflow_call:
    inputs:
      build-version:
        description: "Build version, e.g. 1.0.0, for app metadata."
        required: true
        type: string
    outputs:
      macos-artifact:
        description: "MacOS artifact name."
        value: ${{ jobs.macos.outputs.artifact-name }}
      linux-artifact:
        description: "Linux artifact name."
        value: ${{ jobs.linux.outputs.artifact-name }}
      windows-artifact:
        description: "Windows artifact name."
        value: ${{ jobs.windows.outputs.artifact-name }}

env:
  NAME: Signeitory
  AUTHOR: NEIAAC
  SIGNATURE: com.neiaac.signeitory

defaults:
  run:
    shell: bash

jobs:
  macos:
    runs-on: macos-latest
    outputs:
      artifact-name: ${{ steps.export.outputs.artifact-name }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          cache: "pip"

      - name: Install dependencies
        run: pip install .[build]

      - name: Build artifact
        uses: Nuitka/Nuitka-Action@3b63d5ce0b2c750b273a1436a458d1262cb4687c
        with:
          nuitka-version: 2.5.9
          script-name: src/main.py
          mode: app
          include-data-dir: src/resources=resources
          macos-app-icon: src/resources/icons/logo.png
          macos-signed-app-name: ${{ env.SIGNATURE }}
          macos-app-name: ${{ env.NAME }}
          macos-app-version: ${{ inputs.build-version }}
          product-version: ${{ inputs.build-version }}
          file-version: ${{ inputs.build-version }}
          company-name: ${{ env.AUTHOR }}
          product-name: ${{ env.NAME }}
          file-description: ${{ env.NAME }} app, created by ${{ env.AUTHOR }}.
          output-dir: build
          enable-plugins: pyside6

      - name: Mutate artifact
        run: mv build/main.app build/${{ env.NAME }}.app

      - name: Set artifact name
        id: export
        run: echo "artifact-name=${{ env.NAME }}-MacOS-${{ inputs.build-version }}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.export.outputs.artifact-name }}
          path: build/${{ env.NAME }}*.app
          if-no-files-found: error
          include-hidden-files: true

  linux:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.export.outputs.artifact-name }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          cache: "pip"

      - name: Install dependencies
        run: pip install .[build]

      - name: Build artifact
        uses: Nuitka/Nuitka-Action@3b63d5ce0b2c750b273a1436a458d1262cb4687c
        with:
          nuitka-version: 2.5.9
          script-name: src/main.py
          mode: app
          include-data-dir: src/resources=resources
          linux-icon: src/resources/icons/logo.png
          product-version: ${{ inputs.build-version }}
          file-version: ${{ inputs.build-version }}
          company-name: ${{ env.AUTHOR }}
          product-name: ${{ env.NAME }}
          file-description: ${{ env.NAME }} app, created by ${{ env.AUTHOR }}.
          output-dir: build
          enable-plugins: pyside6
          clang: true
          static-libpython: yes

      - name: Mutate artifact
        run: mv build/main.dist build/${{ env.NAME }}

      - name: Set artifact name
        id: export
        run: echo "artifact-name=${{ env.NAME }}-Linux-${{ inputs.build-version }}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.export.outputs.artifact-name }}
          path: build/${{ env.NAME }}*
          if-no-files-found: error
          include-hidden-files: true

  windows:
    runs-on: windows-latest
    outputs:
      artifact-name: ${{ steps.export.outputs.artifact-name }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          cache: "pip"

      - name: Install dependencies
        run: pip install .[build]

      - name: Build artifact
        uses: Nuitka/Nuitka-Action@3b63d5ce0b2c750b273a1436a458d1262cb4687c
        with:
          nuitka-version: 2.5.9
          script-name: src/main.py
          mode: app
          include-data-dir: src/resources=resources
          windows-icon-from-ico: src/resources/icons/logo.png
          windows-console-mode: disable
          product-version: ${{ inputs.build-version }}
          file-version: ${{ inputs.build-version }}
          company-name: ${{ env.AUTHOR }}
          product-name: ${{ env.NAME }}
          file-description: ${{ env.NAME }} app, created by ${{ env.AUTHOR }}.
          output-dir: build
          enable-plugins: pyside6
          low-memory: true

      - name: Mutate artifact
        run: mv build/main.dist build/${{ env.NAME }}

      - name: Set artifact name
        id: export
        run: echo "artifact-name=${{ env.NAME }}-Windows-${{ inputs.build-version }}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.export.outputs.artifact-name }}
          path: build/${{ env.NAME }}*
          if-no-files-found: error
          include-hidden-files: true
